services:
  # Database PostgreSQL
  - type: pserv
    name: musiclabel-db
    env: docker
    plan: free
    dockerfilePath: ./Dockerfile.postgres
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 1

  # Web Service Django
  - type: web
    name: musiclabel-backend
    env: python
    region: oregon
    plan: free
    
    # Build & Start
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    
    startCommand: gunicorn music_label.wsgi:application --bind 0.0.0.0:$PORT
    
    # Environment Variables
    envVars:
      # Django Settings
      - key: DJANGO_SETTINGS_MODULE
        value: music_label.settings
        
      - key: SECRET_KEY
        generateValue: true  # Genera automaticamente
        
      - key: DEBUG
        value: "False"
        
      - key: ALLOWED_HOSTS
        value: "musiclabel-backend.onrender.com,localhost,127.0.0.1"
      
      # Python Version
      - key: PYTHON_VERSION
        value: "3.11"
        
      # Database (collegato al servizio PostgreSQL)
      - key: DATABASE_URL
        fromDatabase:
          name: musiclabel-db
          property: connectionString
      
      # Whitenoise per file statici
      - key: DISABLE_COLLECTSTATIC
        value: "0"
        
    # Health Check
    healthCheckPath: /
    
    # Autoscaling (per plan paid)
    # autoDeploy: true
    
    # Disk per media files (solo per plan paid)
    # disk:
    #   name: media-files  
    #   mountPath: /app/media
    #   sizeGB: 1

databases:
  # Database PostgreSQL gratuito
  - name: musiclabel-db
    plan: free
    databaseName: musiclabel
    user: admin